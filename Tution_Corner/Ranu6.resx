<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        cwAAAHMBY8FD/gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAACFSURBVDhPpZPL
        DYAwDEMzCFuwGVNw48R0XNgkOBVBSUk/UEtPwm4cCVCJmbuAVnCC2eXWlIA2IA/C7s6sicjKB5jcuTU5
        ULWcZvJAgZrlNBeGnWXhHXwoC94QLXexqyx4M7ogBSOv8IQjH1GB/v9GBWoucSYCqi5xwyUgu+TbZVKg
        4DozXRY3U23RYM/TAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>